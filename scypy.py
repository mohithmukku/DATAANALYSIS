# -*- coding: utf-8 -*-
"""ScyPy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1goG40x7prOIx_vRK0VeSEHZncZRqk5gr
"""

pip install scipy

import scipy
#example : integration using quad function
from scipy import integrate
result,error=integrate.quad(lambda x:x**2,0,1)
print("Result:",result)
print("error:",error)

import numpy as np
from scipy import stats

# Sample data (random numbers)
np.random.seed(42)  # for reproducibility
sample_data = np.random.normal(loc=10, scale=2, size=30)  # sample of 30 observations from a normal distribution with mean 10 and standard deviation 2

# Population parameters
population_mean = 10  # hypothesized population mean

# Perform one-sample t-test
t_statistic, p_value = stats.ttest_1samp(sample_data, population_mean)

# Interpret the results
alpha = 0.05  # significance level
print("t-statistic:", t_statistic)
print("p-value:", p_value)

if p_value < alpha:
    print("Reject the null hypothesis. There is enough evidence to suggest that the sample mean differs significantly from the population mean.")
else:
    print("Fail to reject the null hypothesis. There is not enough evidence to suggest that the sample mean differs significantly from the populationÂ mean.")

import pandas as pd

#generate sample data
np.random.seed(0)
data=pd.DataFrame(
    {
         'Treatment':np.random.choice(['A','B','C'],size=100),
         'Score':np.random.normal(loc=10,scale=2,size=100)
    }
)
print(data)

#claculate mean score for each threatment group
mean_score_per_group=data.groupby('Treatment')['Score'].mean()
print(mean_score_per_group)

#hypothesis Testing(t-test)
group_A=data[data['Treatment']=='A']['Score']
group_B=data[data['Treatment']=='B']['Score']
t_stat,p_value=stats.ttest_ind(group_A,group_B)
print("t-statistic:",t_stat)
print("p-value",p_value)

#ANOVA (one way anova)
f_stat,p_value=stats.f_oneway(data[data['Treatment']=='A']['Score'],
                                   data[data['Treatment']=='B']['Score'],
                                   data[data['Treatment']=='C']['Score'])
print("f statistic:",f_stat)
print("p_value",p_value)